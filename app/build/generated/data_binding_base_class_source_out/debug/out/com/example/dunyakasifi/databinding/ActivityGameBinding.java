// Generated by view binder compiler. Do not edit!
package com.example.dunyakasifi.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.dunyakasifi.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGameBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton answer1Button;

  @NonNull
  public final MaterialButton answer2Button;

  @NonNull
  public final MaterialButton answer3Button;

  @NonNull
  public final MaterialButton backToMenuButton;

  @NonNull
  public final ImageView characterImage;

  @NonNull
  public final LinearLayout gameContainer;

  @NonNull
  public final MaterialButton playAgainButton;

  @NonNull
  public final TextView progressText;

  @NonNull
  public final TextView questionText;

  @NonNull
  public final LinearLayout resultContainer;

  @NonNull
  public final TextView resultText;

  @NonNull
  public final TextView scoreText;

  @NonNull
  public final Toolbar toolbar;

  private ActivityGameBinding(@NonNull LinearLayout rootView, @NonNull MaterialButton answer1Button,
      @NonNull MaterialButton answer2Button, @NonNull MaterialButton answer3Button,
      @NonNull MaterialButton backToMenuButton, @NonNull ImageView characterImage,
      @NonNull LinearLayout gameContainer, @NonNull MaterialButton playAgainButton,
      @NonNull TextView progressText, @NonNull TextView questionText,
      @NonNull LinearLayout resultContainer, @NonNull TextView resultText,
      @NonNull TextView scoreText, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.answer1Button = answer1Button;
    this.answer2Button = answer2Button;
    this.answer3Button = answer3Button;
    this.backToMenuButton = backToMenuButton;
    this.characterImage = characterImage;
    this.gameContainer = gameContainer;
    this.playAgainButton = playAgainButton;
    this.progressText = progressText;
    this.questionText = questionText;
    this.resultContainer = resultContainer;
    this.resultText = resultText;
    this.scoreText = scoreText;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGameBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGameBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_game, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGameBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.answer1Button;
      MaterialButton answer1Button = ViewBindings.findChildViewById(rootView, id);
      if (answer1Button == null) {
        break missingId;
      }

      id = R.id.answer2Button;
      MaterialButton answer2Button = ViewBindings.findChildViewById(rootView, id);
      if (answer2Button == null) {
        break missingId;
      }

      id = R.id.answer3Button;
      MaterialButton answer3Button = ViewBindings.findChildViewById(rootView, id);
      if (answer3Button == null) {
        break missingId;
      }

      id = R.id.backToMenuButton;
      MaterialButton backToMenuButton = ViewBindings.findChildViewById(rootView, id);
      if (backToMenuButton == null) {
        break missingId;
      }

      id = R.id.characterImage;
      ImageView characterImage = ViewBindings.findChildViewById(rootView, id);
      if (characterImage == null) {
        break missingId;
      }

      id = R.id.gameContainer;
      LinearLayout gameContainer = ViewBindings.findChildViewById(rootView, id);
      if (gameContainer == null) {
        break missingId;
      }

      id = R.id.playAgainButton;
      MaterialButton playAgainButton = ViewBindings.findChildViewById(rootView, id);
      if (playAgainButton == null) {
        break missingId;
      }

      id = R.id.progressText;
      TextView progressText = ViewBindings.findChildViewById(rootView, id);
      if (progressText == null) {
        break missingId;
      }

      id = R.id.questionText;
      TextView questionText = ViewBindings.findChildViewById(rootView, id);
      if (questionText == null) {
        break missingId;
      }

      id = R.id.resultContainer;
      LinearLayout resultContainer = ViewBindings.findChildViewById(rootView, id);
      if (resultContainer == null) {
        break missingId;
      }

      id = R.id.resultText;
      TextView resultText = ViewBindings.findChildViewById(rootView, id);
      if (resultText == null) {
        break missingId;
      }

      id = R.id.scoreText;
      TextView scoreText = ViewBindings.findChildViewById(rootView, id);
      if (scoreText == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityGameBinding((LinearLayout) rootView, answer1Button, answer2Button,
          answer3Button, backToMenuButton, characterImage, gameContainer, playAgainButton,
          progressText, questionText, resultContainer, resultText, scoreText, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
