// Generated by view binder compiler. Do not edit!
package com.example.dunyakasifi.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.dunyakasifi.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.switchmaterial.SwitchMaterial;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySettingsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton aboutButton;

  @NonNull
  public final SwitchMaterial eyeHealthSwitch;

  @NonNull
  public final SwitchMaterial musicSwitch;

  @NonNull
  public final SwitchMaterial notificationsSwitch;

  @NonNull
  public final MaterialButton resetProgressButton;

  @NonNull
  public final SwitchMaterial soundSwitch;

  @NonNull
  public final MaterialButton timeLimitButton;

  @NonNull
  public final TextView timeLimitText;

  @NonNull
  public final Toolbar toolbar;

  private ActivitySettingsBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialButton aboutButton, @NonNull SwitchMaterial eyeHealthSwitch,
      @NonNull SwitchMaterial musicSwitch, @NonNull SwitchMaterial notificationsSwitch,
      @NonNull MaterialButton resetProgressButton, @NonNull SwitchMaterial soundSwitch,
      @NonNull MaterialButton timeLimitButton, @NonNull TextView timeLimitText,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.aboutButton = aboutButton;
    this.eyeHealthSwitch = eyeHealthSwitch;
    this.musicSwitch = musicSwitch;
    this.notificationsSwitch = notificationsSwitch;
    this.resetProgressButton = resetProgressButton;
    this.soundSwitch = soundSwitch;
    this.timeLimitButton = timeLimitButton;
    this.timeLimitText = timeLimitText;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.aboutButton;
      MaterialButton aboutButton = ViewBindings.findChildViewById(rootView, id);
      if (aboutButton == null) {
        break missingId;
      }

      id = R.id.eyeHealthSwitch;
      SwitchMaterial eyeHealthSwitch = ViewBindings.findChildViewById(rootView, id);
      if (eyeHealthSwitch == null) {
        break missingId;
      }

      id = R.id.musicSwitch;
      SwitchMaterial musicSwitch = ViewBindings.findChildViewById(rootView, id);
      if (musicSwitch == null) {
        break missingId;
      }

      id = R.id.notificationsSwitch;
      SwitchMaterial notificationsSwitch = ViewBindings.findChildViewById(rootView, id);
      if (notificationsSwitch == null) {
        break missingId;
      }

      id = R.id.resetProgressButton;
      MaterialButton resetProgressButton = ViewBindings.findChildViewById(rootView, id);
      if (resetProgressButton == null) {
        break missingId;
      }

      id = R.id.soundSwitch;
      SwitchMaterial soundSwitch = ViewBindings.findChildViewById(rootView, id);
      if (soundSwitch == null) {
        break missingId;
      }

      id = R.id.timeLimitButton;
      MaterialButton timeLimitButton = ViewBindings.findChildViewById(rootView, id);
      if (timeLimitButton == null) {
        break missingId;
      }

      id = R.id.timeLimitText;
      TextView timeLimitText = ViewBindings.findChildViewById(rootView, id);
      if (timeLimitText == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivitySettingsBinding((LinearLayout) rootView, aboutButton, eyeHealthSwitch,
          musicSwitch, notificationsSwitch, resetProgressButton, soundSwitch, timeLimitButton,
          timeLimitText, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
